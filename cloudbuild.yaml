steps:
  - name: gcr.io/cloud-builders/gcloud
    args:
      - '-c'
      - |
        (
          set -e
          gsutil hash -h yarn.lock | grep md5 | tr -s " " | awk '{print $3}' > hashed.yarn-lock
          gsutil -m cp "gs://$_CACHE_BUCKET/$(cat hashed.yarn-lock)" cache.tar.gz 2> /dev/null
          test -f cache.tar.gz
          tar -zxf cache.tar.gz
          echo "Using cache from: gs://$_CACHE_BUCKET/$(cat hashed.yarn-lock)"
        ) || true
    id: 'fetch-cache'
    entrypoint: sh
  - name: $_NODE_IMAGE
    args:
      - '-c'
      - |
        test -f cache.tar.gz || yarn install
    id: 'yarn-install'
    entrypoint: sh
  - name: $_NODE_IMAGE
    args:
      - build
    id: 'yarn-build'
    entrypoint: yarn
  - name: gcr.io/cloud-builders/docker
    args:
      - build
      - '--build-arg'
      - 'caddy_image=$_CADDY_IMAGE'
      - '-t'
      - '$_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA'
      - '--no-cache'
      - .
    id: 'docker-build'
  - name: gcr.io/cloud-builders/docker
    args:
      - push
      - '$_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA'
    id: Push
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    args:
      - run
      - services
      - update
      - $_SERVICE_NAME
      - '--platform=managed'
      - '--image=$_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA'
      - '--region=$_DEPLOY_REGION'
      - '--quiet'
    id: Deploy
    entrypoint: gcloud
images:
  - '$_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA'
